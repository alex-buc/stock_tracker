{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let LocalStorageService = /*#__PURE__*/(() => {\n  class LocalStorageService {\n    constructor() {\n      this.changes$ = new Subject();\n      this.key = \"stoks\";\n      this.localStorage = window.localStorage;\n    }\n\n    get() {\n      if (this.isLocalStorageSupported) {\n        let value = this.localStorage.getItem(this.key);\n\n        if (value) {\n          return JSON.parse(value);\n        }\n      }\n\n      return [];\n    }\n\n    set(value) {\n      var _a;\n\n      if (this.isLocalStorageSupported) {\n        let data = (_a = this.get()) !== null && _a !== void 0 ? _a : [];\n        data = data.filter(elem => elem.symbol != value.symbol);\n        data.push(value);\n        this.localStorage.setItem(this.key, JSON.stringify(data));\n        this.changes$.next(data);\n        return true;\n      }\n\n      return false;\n    }\n\n    remove(symbol) {\n      var _a;\n\n      if (this.isLocalStorageSupported) {\n        let data = (_a = this.get()) !== null && _a !== void 0 ? _a : [];\n        data = data.filter(elem => elem.symbol != symbol);\n        this.localStorage.setItem(this.key, JSON.stringify(data));\n        this.changes$.next(data);\n        return true;\n      }\n\n      return false;\n    }\n\n    get isLocalStorageSupported() {\n      return !!this.localStorage;\n    }\n\n  }\n\n  LocalStorageService.ɵfac = function LocalStorageService_Factory(t) {\n    return new (t || LocalStorageService)();\n  };\n\n  LocalStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LocalStorageService,\n    factory: LocalStorageService.ɵfac,\n    providedIn: 'root'\n  });\n  return LocalStorageService;\n})();","map":null,"metadata":{},"sourceType":"module"}