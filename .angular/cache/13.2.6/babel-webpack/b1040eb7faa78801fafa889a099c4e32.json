{"ast":null,"code":"import { map, forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let FinnhubStockService = /*#__PURE__*/(() => {\n  class FinnhubStockService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n    }\n\n    getStockInfoBySymbol(symbol) {\n      let quote = this.httpClient.get(`https://finnhub.io/api/v1/quote?symbol=${symbol}&token=bu4f8kn48v6uehqi3cqg`).pipe(map(data => {\n        return {\n          currentPrice: data.c,\n          change: data.d,\n          percentChange: data.dp,\n          highestPriceToday: data.h,\n          lowestPriceToday: data.l,\n          openingPrice: data.o,\n          previousClosePrice: data.pc\n        };\n      }));\n      let stockInfo = this.httpClient.get(`https://finnhub.io/api/v1/search?q=${symbol}&token=bu4f8kn48v6uehqi3cqg`).pipe(map(data => {\n        if (data.count && data.count > 0) return data.result[0];else return null;\n      }));\n      return forkJoin([stockInfo, quote]).pipe(map(results => {\n        if (!results[0]) {\n          return {\n            error: \"Something went worng!\"\n          };\n        } else return {\n          symbol: symbol,\n          info: results[0],\n          quote: results[1]\n        };\n      }));\n    }\n\n  }\n\n  FinnhubStockService.ɵfac = function FinnhubStockService_Factory(t) {\n    return new (t || FinnhubStockService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  FinnhubStockService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FinnhubStockService,\n    factory: FinnhubStockService.ɵfac,\n    providedIn: 'root'\n  });\n  return FinnhubStockService;\n})();","map":null,"metadata":{},"sourceType":"module"}