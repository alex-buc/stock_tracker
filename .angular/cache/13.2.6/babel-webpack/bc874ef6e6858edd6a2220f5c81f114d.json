{"ast":null,"code":"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Slide animation preset\n */\nexport const\n/** @type {?} */\nslide = {\n  hide: notification => {\n    // Prepare variables\n    const\n    /** @type {?} */\n    config = notification.component.getConfig();\n    const\n    /** @type {?} */\n    shift = notification.component.getShift();\n    let\n    /** @type {?} */\n    from;\n    let\n    /** @type {?} */\n    to; // Configure variables, depending on configuration and component\n\n    if (config.position.horizontal.position === 'left') {\n      from = {\n        transform: `translate3d( 0, ${shift}px, 0 )`\n      };\n      to = {\n        transform: `translate3d( calc( -100% - ${config.position.horizontal.distance}px - 10px ), ${shift}px, 0 )`\n      };\n    } else if (config.position.horizontal.position === 'right') {\n      from = {\n        transform: `translate3d( 0, ${shift}px, 0 )`\n      };\n      to = {\n        transform: `translate3d( calc( 100% + ${config.position.horizontal.distance}px + 10px ), ${shift}px, 0 )`\n      };\n    } else {\n      let\n      /** @type {?} */\n      horizontalPosition;\n\n      if (config.position.vertical.position === 'top') {\n        horizontalPosition = `calc( -100% - ${config.position.horizontal.distance}px - 10px )`;\n      } else {\n        horizontalPosition = `calc( 100% + ${config.position.horizontal.distance}px + 10px )`;\n      }\n\n      from = {\n        transform: `translate3d( -50%, ${shift}px, 0 )`\n      };\n      to = {\n        transform: `translate3d( -50%, ${horizontalPosition}, 0 )`\n      };\n    } // Done\n\n\n    return {\n      from,\n      to\n    };\n  },\n  show: notification => {\n    // Prepare variables\n    const\n    /** @type {?} */\n    config = notification.component.getConfig();\n    let\n    /** @type {?} */\n    from;\n    let\n    /** @type {?} */\n    to; // Configure variables, depending on configuration and component\n\n    if (config.position.horizontal.position === 'left') {\n      from = {\n        transform: `translate3d( calc( -100% - ${config.position.horizontal.distance}px - 10px ), 0, 0 )`\n      };\n      to = {\n        transform: 'translate3d( 0, 0, 0 )'\n      };\n    } else if (config.position.horizontal.position === 'right') {\n      from = {\n        transform: `translate3d( calc( 100% + ${config.position.horizontal.distance}px + 10px ), 0, 0 )`\n      };\n      to = {\n        transform: 'translate3d( 0, 0, 0 )'\n      };\n    } else {\n      let\n      /** @type {?} */\n      horizontalPosition;\n\n      if (config.position.vertical.position === 'top') {\n        horizontalPosition = `calc( -100% - ${config.position.horizontal.distance}px - 10px )`;\n      } else {\n        horizontalPosition = `calc( 100% + ${config.position.horizontal.distance}px + 10px )`;\n      }\n\n      from = {\n        transform: `translate3d( -50%, ${horizontalPosition}, 0 )`\n      };\n      to = {\n        transform: 'translate3d( -50%, 0, 0 )'\n      };\n    } // Done\n\n\n    return {\n      from,\n      to\n    };\n  }\n}; //# sourceMappingURL=slide.animation-preset.js.map","map":null,"metadata":{},"sourceType":"module"}