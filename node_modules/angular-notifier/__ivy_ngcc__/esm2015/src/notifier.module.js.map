{"version":3,"file":"notifier.module.js","sources":["notifier.module.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,cAAc,EAAuB,QAAQ,EAAE,MAAM,eAAe,CAAC;AAE9E,OAAO,EAAE,0BAA0B,EAAE,MAAM,2CAA2C,CAAC;AACvF,OAAO,EAAE,6BAA6B,EAAE,MAAM,8CAA8C,CAAC;AAC7F,OAAO,EAAE,cAAc,EAAmB,MAAM,gCAAgC,CAAC;AACjF,OAAO,EAAE,wBAAwB,EAAE,MAAM,uCAAuC,CAAC;AACjF,OAAO,EAAE,oBAAoB,EAAE,MAAM,mCAAmC,CAAC;AACzE,OAAO,EAAE,eAAe,EAAE,MAAM,6BAA6B,CAAC;AAC9D;AACG;AAGG;;;AAEN,MAAM,CAAC,uBAAM,oBAAoB,GAC3B,IAAI,cAAc,CAAkB,qCAAqC,CAAC,CAAC;AACjF;AACG;AAC0C;AAE7C,MAAM,CAAC,uBAAM,mBAAmB,GAC1B,IAAI,cAAc,CAAiB,oCAAoC,CAAC,CAAC;AAC/E;AACG;AAGwB;AAAG;AAAa;AAGmD;AAAG;AAElF;AACI;AAEnB,MAAM,sCAAsC,OAAwB;AAAI,IACpE,MAAM,CAAC,IAAI,cAAc,CAAC,OAAO,CAAC,CAAC;AACvC,CAAC;AACD;AACG;AACyD;AAC1D;AACU;AACkH;AAC5H;AAEA;AACF,MAAM;AAA2C,IAC7C,MAAM,CAAC,IAAI,cAAc,CAAC,EAAE,CAAC,CAAC;AAClC,CAAC;AACD;AACG;AACe;AA0BlB,MAAM;AACN;AAEE;AAED;AAAO;AAA2B;AACO;AAAQ,IAEvC,MAAM,CAAC,UAAU,CAAC,UAA2B,EAAE;AAAI,QACtD,MAAM,CAAC;AACf,YAAY,QAAQ,EAAE,cAAc;AACpC,YAAY,SAAS,EAAE;AACvB;AAC8G,gBAC9F;AAChB,oBAAoB,OAAO,EAAE,oBAAoB;AACjD,oBAAoB,QAAQ,EAAE,OAAO;AACrC,iBAAiB;AACjB;AAC+F,gBAC/E;AAChB,oBAAoB,IAAI,EAAE;AAC1B,wBAAwB,oBAAoB;AAC5C,qBAAqB;AACrB,oBAAoB,OAAO,EAAE,mBAAmB;AAChD,oBAAoB,UAAU,EAAE,2BAA2B;AAC3D,iBAAiB;AACjB,aACa;AACb,SAAS,CAAC;AACV;AACA;0CAvDC,QAAQ,SAAC,kBACN,YAAY,EAAE;eACV,0BAA0B,sBAC1B;KAA6B,kBAChC,kBACD,OAAO,EAAE,sBACL;uBAA0B;OAC7B;AACD,OAAO,EAAE;CACL,YAAY,kBACf,kBACD,SAAS,EAAE,sBACP;;WAAwB,sBACxB;MAAe,sBACf,oBAAoB;;;;;6CAGpB,0BACI,OAAO,EAAE,mBAAmB;eAC5B;CAAU,EAAE;cAA4B;IAC3C,kBAEJ,cACJ;;;;;;;;;;;;;;;;;;;;;;;4GACK;AAAC","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { NotifierContainerComponent } from './components/notifier-container.component';\nimport { NotifierNotificationComponent } from './components/notifier-notification.component';\nimport { NotifierConfig, NotifierOptions } from './models/notifier-config.model';\nimport { NotifierAnimationService } from './services/notifier-animation.service';\nimport { NotifierQueueService } from './services/notifier-queue.service';\nimport { NotifierService } from './services/notifier.service';\n\n// tslint:disable variable-name\n\n/**\n * Injection Token for notifier options\n */\nexport const NotifierOptionsToken: InjectionToken<NotifierOptions>\n    = new InjectionToken<NotifierOptions>('[angular-notifier] Notifier Options');\n\n/**\n * Injection Token for notifier configuration\n */\nexport const NotifierConfigToken: InjectionToken<NotifierConfig>\n    = new InjectionToken<NotifierConfig>('[anuglar-notifier] Notifier Config');\n\n// tslint:enable variable-name\n\n/**\n * Factory for a notifier configuration with custom options\n *\n * Sidenote:\n * Required as Angular AoT compilation cannot handle dynamic functions; see <https://github.com/angular/angular/issues/11262>.\n *\n * @param   options - Custom notifier options\n * @returns - Notifier configuration as result\n */\nexport function notifierCustomConfigFactory(options: NotifierOptions): NotifierConfig {\n    return new NotifierConfig(options);\n}\n\n/**\n * Factory for a notifier configuration with default options\n *\n * Sidenote:\n * Required as Angular AoT compilation cannot handle dynamic functions; see <https://github.com/angular/angular/issues/11262>.\n *\n * @returns - Notifier configuration as result\n */\nexport function notifierDefaultConfigFactory(): NotifierConfig {\n    return new NotifierConfig({});\n}\n\n/**\n * Notifier module\n */\n@NgModule({\n    declarations: [\n        NotifierContainerComponent,\n        NotifierNotificationComponent\n    ],\n    exports: [\n        NotifierContainerComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        NotifierAnimationService,\n        NotifierService,\n        NotifierQueueService,\n\n        // Provide the default notifier configuration if just the module is imported\n        {\n            provide: NotifierConfigToken,\n            useFactory: notifierDefaultConfigFactory\n        }\n\n    ]\n})\nexport class NotifierModule {\n\n\t/**\n\t * Setup the notifier module with custom providers, in this case with a custom configuration based on the givne options\n\t *\n\t * @param   [options={}] - Custom notifier options\n\t * @returns - Notifier module with custom providers\n\t */\n    public static withConfig(options: NotifierOptions = {}): ModuleWithProviders {\n        return {\n            ngModule: NotifierModule,\n            providers: [\n\n                // Provide the options itself upfront (as we need to inject them as dependencies -- see below)\n                {\n                    provide: NotifierOptionsToken,\n                    useValue: options\n                },\n\n                // Provide a custom notifier configuration, based on the given notifier options\n                {\n                    deps: [\n                        NotifierOptionsToken\n                    ],\n                    provide: NotifierConfigToken,\n                    useFactory: notifierCustomConfigFactory\n                }\n\n            ]\n        };\n    }\n\n}\n"]}